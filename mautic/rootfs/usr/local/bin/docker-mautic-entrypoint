#!/usr/bin/env bash
set -e

MAUTIC_HOME=${MAUTIC_HOME:-'/var/www/html'}
MAUTIC_SOURCE=${MAUTIC_SOURCE:-'/usr/src/mautic'}
MAUTICCRON_SOURCE=${MAUTICCRON_SOURCE:-'/usr/src/mautic-cron'}
AUTOLOAD_FILE="${MAUTIC_HOME}/vendor/autoload.php"

installOrUpdate () {
  echo >&2 "📄 Copying Source"
  mkdir -p "${MAUTIC_HOME}"
  cp -R "${MAUTIC_SOURCE}/." "${MAUTIC_HOME}"
}

resetCache () {
  rm -Rf "${MAUTIC_HOME}/var/cache/prod"
  mkdir -p "${MAUTIC_HOME}/var/cache/prod"
  chmod 777 "${MAUTIC_HOME}/var/cache/prod"
}

buildApp () {
  if [ ! -f "${AUTOLOAD_FILE}" ]; then
    echo >&2 "🏗️ Mautic not ready. Making it so."
    cd "${MAUTIC_HOME}"
    COMPOSER_CACHE_READ_ONLY=1 /usr/local/bin/composer install
  fi
}

cleanupCron () {
  if [ -f "${MAUTICCRON_SOURCE}/mautic" ]; then
    echo >&2 "⏲️ Cleaning up cron table"
    cp "${MAUTICCRON_SOURCE}/mautic" /etc/cron.d/mautic
  fi
}

checkUpdate () {
  if cmp -s "${MAUTIC_HOME}/sig.txt" "${MAUTIC_SOURCE}/sig.txt" ; then
    echo >&2 "🗃 No changes"
  else
    echo >&2 "🗄️ Mautic has changes"
    rm -Rf "${AUTOLOAD_FILE}"
    installOrUpdate
  fi
}

if [ -n "$(ls -A """${MAUTIC_HOME}""" 2>/dev/null)" ]
then
  echo >&2 "📂 Mautic app exists in ${MAUTIC_HOME}"
  checkUpdate
else
  echo >&2 "📁 Moving Mautic to ${MAUTIC_HOME}"
  installOrUpdate
fi

buildApp
resetCache
cleanupCron

echo >&2 "🆗 Ready"
if [[ -x "/docker-entrypoint.sh" ]]; then
  # first arg is `-f` or `--some-option`
  if [ "${1#-}" != "$1" ]; then
    set -- /docker-entrypoint.sh "$@"
  fi

  /docker-entrypoint.sh "$@"
fi 
